# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main", "develop", "release/*", "dev/**" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
    VERSION_CODE_OFFSET: 62

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Set versionCode
        run:
          echo "versionCode=$(( $VERSION_CODE_OFFSET + ${{ github.run_number }} ))" >> $GITHUB_ENV
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Test startsWith ref_name
        if: startsWith(github.ref_name, 'dev/')
        run: |
          echo ref name is ${{ github.ref_name }}
          echo ${{ github.ref_name }} startsWith 'dev/'

      - name: Test startsWith ref_name
        if: startsWith(github.ref_name, 'release/')
        run: |
          echo ref name is ${{ github.ref_name }}
          echo ${{ github.ref_name }} startsWith "release/"

      - name: Test NOT startsWith ref_name
        if: ${{ !startsWith(github.ref_name, 'dev/') }}
        run: |
          echo ref name is ${{ github.ref_name }}
          echo ${{ github.ref_name }} NOT startsWith 'dev/'

      - name: Test startsWith 2
        if: startsWith('abc', 'dev/')
        run: |
          echo abc startsWith 'dev/'

      - name: Test startsWith 3
        if: startsWith('dev/aaa', 'dev/')
        run: |
          echo dev/aaa startsWith 'dev/'

      # Checkout submodule
      - run: |
          echo "${{ secrets.DEPLOY_KEY }}" > deploy.key
          chmod 400 deploy.key
          GIT_SSH_COMMAND='ssh -i deploy.key' git submodule update --init --recursive
          ls -R

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo job2 run No. ${{ github.run_number }}
          echo ${{ github.ref_name }}
          echo versionCode is ${{ env.versionCode }}

      - name: test env.
        env:
          TESTVAR: $ {{ env.GITHUB_ACTION }}
        run: echo $TESTVAR
